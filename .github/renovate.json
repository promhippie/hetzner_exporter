{
    "extends": [
        "config:base",
        ":semanticCommits",
        ":semanticCommitType(deps)",
        ":automergeDigest"
    ],
    "dockerfile": {
        "pinDigests": true
    },
    "gomod": {
        "postUpdateOptions": [
            "gomodUpdateImportPaths",
            "gomodTidy"
        ]
    },
    "packageRules": [
        {
            "description": "Semantic commits for major versions",
            "groupName": "major versions",
            "matchUpdateTypes": [
                "major"
            ],
            "semanticCommitType": "deps",
            "semanticCommitScope": "major",
            "automerge": true
        },
        {
            "description": "Semantic commits for minor versions",
            "groupName": "minor versions",
            "matchUpdateTypes": [
                "minor"
            ],
            "semanticCommitType": "deps",
            "semanticCommitScope": "minor",
            "automerge": true
        },
        {
            "description": "Semantic commits for patch versions",
            "groupName": "patch versions",
            "matchUpdateTypes": [
                "patch"
            ],
            "semanticCommitType": "deps",
            "semanticCommitScope": "patch",
            "automerge": true
        },
        {
            "description": "Semantic commits for pin and digest",
            "groupName": "digest versions",
            "matchUpdateTypes": [
                "pin",
                "digest"
            ],
            "semanticCommitType": "deps",
            "semanticCommitScope": "patch",
            "automerge": true
        },
        {
            "description": "Automerge untagged golang libs",
            "groupName": "untagged libraries",
            "matchPackageNames": [
                "golang.org/x/crypto",
                "golang.org/x/net"
            ],
            "semanticCommitType": "deps",
            "semanticCommitScope": "patch",
            "automerge": true
        }
    ],
    "ignoreDeps": [
        "github.com/prometheus/prometheus",
        "docker/build-push-action"
    ],
    "labels": [
        "renovate"
    ]
}
